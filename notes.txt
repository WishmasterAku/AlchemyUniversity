Modulus Operator
Time to learn a new operator: %

This operator is called the modulus operator. It will tell us the remainder of a division.

When you divide 8 by 3 you get 2 and two-thirds. Or 2 with a remainder of 2.

The expression 8 % 3 evaluates to that remainder: 2

Let's take a look at a few examples:

console.log(8 % 3) // 2
console.log(5 % 2) // 1
console.log(7 % 4) // 3
 Let's examine how we can use modulus in loops!

 Your Goal: Modulus Scream
Let's modify our function to return a scream alternating between lower and capital case. For example:
console.log( scream(5) ); // aAaAa
console.log( scream(10) ); // aAaAaAaAaA
 We'll need to add a capital "A" and lower-case "a" on alternating iterations. How might we do this with the modulus operator?


 Modulus in Loops
 How many even numbers are there from 1 to 11?

 How might we program a computer to figure this out?

First, we need to figure out how to recognize an even number! Let's say we have some number num:


Here we have a boolean isEven that will tell us whether or not remainder is 0. When the remainder is 0, the num is evenly divisible by 2. When a number is evenly divisible by 2, it is even by definition!

To get a count from 1 to 11 of the total even numbers we could simply use a for loop like we have been doing:

let count = 0;
for(let i = 1; i <= 11; i++) {
    const remainder = i % 2;
    const isEven = remainder === 0;
    if(isEven) {
        count++;
    }
}
console.log(count); // 5
We get a count of 5 because there are 5 even numbers between 1 and 11. The numbers are 2, 4, 6, 8, and 10!